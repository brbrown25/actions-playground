name: Formatting Check

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
        otp: [20.0]
        elixir: [1.5.1]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm 
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - name: Use Elixir
      uses: actions/setup-elixir@v1
      with:
        otp-version: ${{ matrix.otp }}
        elixir-version: ${{ matrix.elixir }}
      uses: actions/cache@v2
      id: deps-cache
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      uses: actions/cache@v2
      id: build-cache
      with:
        path: _build
        key: ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
    - name: Install deps
      run: (cd api && mix deps.get)
      run: mix format --check-formatted
    - name: Install Api dependencies
      run: npm ci --prefix ./api/assets
    - name: Check Format of Api JS Sources
      run: npm run format-check --prefix ./api/assets
    - name: Install Frontend dependencies
      run: npm ci --prefix ./frontend
    - name: Check Format of Frontend JS Sources
      run: npm run format-check --prefix ./frontend
